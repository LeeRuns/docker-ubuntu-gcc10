name: Build and Deploy
on: [push]
jobs:
  base:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Build GCC Base Image
      run: |
        docker pull uilianries/base
        docker build -t uilianries/base base/
    - name: Inspect Docker image uilianries/base
      run: docker inspect uilianries/base
    - name: Docker login
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}"
    - name: Docker Upload image uilianries/base
      run: docker push uilianries/base
  build:
    needs: base
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [gcc10, gcc9, gcc8]
    steps:
    - uses: actions/checkout@master
    - name: Build ${{ matrix.version }}
      run: |
        docker pull uilianries/${{ matrix.version }}
        docker-compose build ${{ matrix.version }}
        docker build -t uilianries/${{ matrix.version }} ${{ matrix.version }}/
    - name: Inspect Docker image uilianries/${{ matrix.version }}
      run: docker inspect uilianries/${{ matrix.version }}
    - name: Docker login
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}"
    - name: Docker Upload image uilianries/${{ matrix.version }}
      run: docker push uilianries/${{ matrix.version }}
  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [gcc10, gcc9, gcc8]
    steps:
    - uses: actions/checkout@master
    - name: Test ${{ matrix.version }}
      run: |
        docker pull uilianries/${{ matrix.version }}
        docker run -t -d --name ${{ matrix.version }} uilianries/${{ matrix.version }}
        docker exec ${{ matrix.version }} python --version
        docker exec ${{ matrix.version }} pip --version
        docker exec ${{ matrix.version }} conan --version
        docker exec ${{ matrix.version }} conan config init --force
        docker exec ${{ matrix.version }} conan install -r conan-center poco/1.9.4@ --build=poco
