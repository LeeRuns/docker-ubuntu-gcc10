name: Build and Deploy
on: [push]
jobs:
  base:
    if: False
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Build Docker Base Image
      run: |
        docker-compose pull base
        docker-compose build base
    - name: Inspect Docker image uilianries/base
      run: docker inspect uilianries/base
    - name: Docker login
      run: docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
    - name: Docker Upload image uilianries/base
      run: docker push uilianries/base
  conanfy-gcc:
    if: False
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: [gcc5-conanfy, gcc6-conanfy, gcc7-conanfy, gcc8-conanfy, gcc9-conanfy, gcc10-conanfy]
    steps:
    - uses: actions/checkout@master
    - name: Build ${{ matrix.version }}
      run: |
        docker-compose pull ${{ matrix.version }}
        docker-compose build --build-arg CONAN_PASSWORD=${{ secrets.CONAN_PASSWORD }} --build-arg CONAN_LOGIN_USERNAME=${{ secrets.CONAN_LOGIN_USERNAME }} ${{ matrix.version }}
    - name: Docker login
      run: docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
    - name: Docker Upload image uilianries/${{ matrix.version }}
      run: docker push uilianries/${{ matrix.version }}
  build-gcc:
    if: False
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: [gcc5, gcc6, gcc7, gcc8, gcc9, gcc10]
    steps:
    - uses: actions/checkout@master
    - name: Build ${{ matrix.version }}
      run: |
        docker-compose pull ${{ matrix.version }}
        docker-compose build ${{ matrix.version }}
    - name: Inspect Docker image uilianries/${{ matrix.version }}
      run: docker inspect uilianries/${{ matrix.version }}
    - name: Docker login
      run: docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
    - name: Docker Upload image uilianries/${{ matrix.version }}
      run: docker push uilianries/${{ matrix.version }}
  test-gcc:
    if: False
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: [gcc5, gcc6, gcc7, gcc8, gcc9, gcc10]
    steps:
    - uses: actions/checkout@master
    - name: Test ${{ matrix.version }}
      run: |
        chmod +x test/gcc/conan/run.sh
        chmod +x test/gcc/conan/test_conan.sh
        chmod +x test/gcc/fortran/run.sh
        chmod +x test/gcc/fortran/test_fortran.sh
        chmod +x test/simple/run.sh
        chmod +x test/simple/test_simple.sh
        chmod +x test/package/run.sh
        test/simple/run.sh ${{ matrix.version }}
        test/package/run.sh ${{ matrix.version }}
        test/gcc/fortran/run.sh ${{ matrix.version }}
        test/gcc/conan/run.sh ${{ matrix.version }}
  conanfy-clang:
    if: False
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: [clang9-conanfy, clang10-conanfy, clang11-conanfy]
    steps:
    - uses: actions/checkout@master
    - name: Build ${{ matrix.version }}
      run: |
        docker-compose pull ${{ matrix.version }}
        docker-compose build --build-arg CONAN_PASSWORD=${{ secrets.CONAN_PASSWORD }} --build-arg CONAN_LOGIN_USERNAME=${{ secrets.CONAN_LOGIN_USERNAME }} ${{ matrix.version }}
    - name: Docker login
      run: docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
    - name: Docker Upload image uilianries/${{ matrix.version }}
      run: docker push uilianries/${{ matrix.version }}
  build-clang:
    if: False
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: [clang9, clang10, clang11]
    steps:
    - uses: actions/checkout@master
    - name: Build ${{ matrix.version }}
      run: |
        docker-compose build ${{ matrix.version }}
    - name: Inspect Docker image uilianries/${{ matrix.version }}
      run: docker inspect uilianries/${{ matrix.version }}
    - name: Docker login
      run: docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
    - name: Docker Upload image uilianries/${{ matrix.version }}
      run: docker push uilianries/${{ matrix.version }}
  test-clang:
    if: False
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: [clang9, clang10, clang11]
    steps:
    - uses: actions/checkout@master
    - name: Test ${{ matrix.version }}
      run: |
        chmod +x test/clang/conan/run.sh
        chmod +x test/clang/conan/test_conan.sh
        chmod +x test/simple/run.sh
        chmod +x test/simple/test_simple.sh
        chmod +x test/package/run.sh
        test/simple/run.sh ${{ matrix.version }}
        test/package/run.sh ${{ matrix.version }}
        test/clang/run.sh ${{ matrix.version }}
