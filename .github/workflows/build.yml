name: Build and Deploy
on: [push]
jobs:
  base:
    runs-on: ubuntu-latest
    env:
      DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
    steps:
    - uses: actions/checkout@master
    - name: Build Docker Base Image
      run: |
        docker-compose build base
    - name: Docker login
      run: docker login ${{ secrets.DOCKER_REPOSITORY }} -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
    - name: Docker Upload image base
      run: docker push ${{ secrets.DOCKER_REPOSITORY }}/base
  build-gcc:
    needs: base
    runs-on: ubuntu-latest
    env:
      DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
    strategy:
      fail-fast: false
      matrix:
        version: [gcc5, gcc6, gcc7, gcc8, gcc9, gcc10]
    steps:
    - uses: actions/checkout@master
    - name: Build ${{ matrix.version }}
      run: docker-compose build ${{ matrix.version }}
    - name: Docker login
      run: docker login ${{ secrets.DOCKER_REPOSITORY }} -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
    - name: Docker Upload image ${{ matrix.version }}
      run: docker push ${{ secrets.DOCKER_REPOSITORY }}/${{ matrix.version }}
  build-clang:
    needs: base
    runs-on: ubuntu-latest
    env:
      DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
    strategy:
      fail-fast: false
      matrix:
        version: [clang9, clang10, clang11, clang12]
    steps:
    - uses: actions/checkout@master
    - name: Build ${{ matrix.version }}
      run: docker-compose build ${{ matrix.version }}
    - name: Docker login
      run: docker login ${{ secrets.DOCKER_REPOSITORY }} -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
    - name: Docker Upload image ${{ matrix.version }}
      run: docker push ${{ secrets.DOCKER_REPOSITORY }}/${{ matrix.version }}
  test-gcc:
    needs: build-gcc
    runs-on: ubuntu-latest
    env:
      DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
    strategy:
      fail-fast: false
      matrix:
        version: [gcc5, gcc6, gcc7, gcc8, gcc9, gcc10]
    steps:
    - uses: actions/checkout@master
    - name: Docker login
      run: docker login ${{ secrets.DOCKER_REPOSITORY }} -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
    - name: Test ${{ matrix.version }}
      run: |
        chmod +x test/gcc/conan/run.sh
        chmod +x test/gcc/conan/test_conan.sh
        chmod +x test/gcc/fortran/run.sh
        chmod +x test/gcc/fortran/test_fortran.sh
        chmod +x test/simple/run.sh
        chmod +x test/simple/test_simple.sh
        chmod +x test/package/run.sh
        test/simple/run.sh ${{ matrix.version }}
        test/package/run.sh ${{ matrix.version }}
        test/gcc/fortran/run.sh ${{ matrix.version }}
        test/gcc/conan/run.sh ${{ matrix.version }}
  test-clang:
    needs: build-clang
    runs-on: ubuntu-latest
    env:
      DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
    strategy:
      fail-fast: false
      matrix:
        version: [clang9, clang10, clang11, clang12]
    steps:
    - uses: actions/checkout@master
    - name: Docker login
      run: docker login ${{ secrets.DOCKER_REPOSITORY }} -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
    - name: Test ${{ matrix.version }}
      run: |
        chmod +x test/clang/conan/run.sh
        chmod +x test/clang/conan/test_conan.sh
        chmod +x test/simple/run.sh
        chmod +x test/simple/test_simple.sh
        chmod +x test/package/run.sh
        test/simple/run.sh ${{ matrix.version }}
        test/package/run.sh ${{ matrix.version }}
        test/clang/run.sh ${{ matrix.version }}
